#
# Webserver image: rk_alpine:base with apache2 + modphp + php7 + mariadb + sqlite3 + mongodb + imagemagick + sshd + pureftpd
# docker build -t rk_alpine:webserver -f webserver.df .
#

FROM rk_alpine:base
MAINTAINER Roland Kujundzic <roland@kujundzic.de>

# install php7.2 + apache2 + imagemagick:
RUN apk update && apk add --no-cache php7 apache2 apache2-proxy apache2-utils php7-apache2 php7-pdo_mysql php7-mysqli php7-imap php7-sqlite3 \
	php7-pecl-mongodb php7-mbstring php7-zip php7-xsl php7-tidy php7-json php7-gd php7-curl php7-soap \
	php7-pecl-xdebug sqlite imagemagick

# install mariadb + openssh-server - todo: pure-ftpd-mysql, mongodb
RUN apk add --no-cache shadow sudo openssh-server mariadb mariadb-client

# create user with ssh login and sudo priv
ARG USER_NAME=rk
ARG USER_PASS=magic
RUN echo "CREATE_MAIL_SPOOL=no" >> /etc/default/useradd && addgroup -S sudo && \
	useradd -U -u 1000 -G sudo -m -d /home/$USER_NAME -s /bin/ash $USER_NAME && \
	echo "$USER_NAME:$USER_PASS" | chpasswd

# config files
COPY webserver /

# configure
RUN patch /etc/ssh/sshd_config /root/setup/sshd_config.patch && \
patch /etc/php7/php.ini /root/setup/php.cli.patch && \
sed -i 's/^#LoadModule vhost_alias_module/LoadModule vhost_alias_module/' /etc/apache2/httpd.conf && \
sed -i 's/^#LoadModule rewrite_module/LoadModule rewrite_module/' /etc/apache2/httpd.conf && \
sed -i 's/^#LoadModule deflate_module/LoadModule deflate_module/' /etc/apache2/httpd.conf && \
sed -i 's/^#ServerName www.example.com/ServerName 172.17.0.2/' /etc/apache2/httpd.conf && \
echo "IncludeOptional /etc/apache2/vhost.d/*.conf" >> /etc/apache2/httpd.conf && \
mkdir /run/apache2 && \
cp /root/setup/.vimrc /home/rk/.vimrc && \
chown -R rk.rk /webhome && \
chown -R rk.rk /home/rk

# && ln -sf /proc/self/fd/1 /var/log/apache2/access.log \
# && ln -sf /proc/self/fd/1 /var/log/apache2/error.log
#	patch /etc/php/7.2/apache2/php.ini /home/setup/php.apache2.patch && \
#	cat /home/setup/.bashrc >> /home/rk/.bashrc && \

# backup only files from /webhome
WORKDIR /webhome/app
VOLUME [ "/webhome/app" ]

# start script
#ENTRYPOINT ["/sbin/docker_entrypoint.sh"]

# run main service
#CMD ["/sbin/docker_cmd.sh"]
CMD httpd -D FOREGROUND


